import ij.*;import ij.process.*;import ij.gui.*;/** * <hr> * <p><b>Plugin of ImageJ:</b><br> * FFT<br> * * <p><b>Author:</b><br> * Daniel Sage <a href="mailto:daniel.sage@epfl.ch?subject=SNR Plugin">daniel.sage@epfl.ch</a><br> * Swiss Federal Institute of Technology Lausanne, * Biomedical Imaging Group, * CH-1015 Lausanne, Switzerland, * <a href="http://bigwww.epfl.ch">http://bigwww.epfl.ch/</a><br> * * <p><b>Version:</b><br> * 3 September 2006<br> * * <p><b>Copyright</b><br> * Copyright © 2006, Swiss Federal Institute of Technology, Lausanne, Switzerland, (EPFL)<br> * * <hr> * */public class Threshold_ {	public Threshold_() {		ImagePlus imp = WindowManager.getCurrentImage();		if (imp == null) {			IJ.showMessage("No open image.");			return;		}		if (imp.getType() != ImagePlus.GRAY8 && imp.getType() != ImagePlus.GRAY16 && imp.getType() != ImagePlus.GRAY32) {			IJ.showMessage("Only process the 8-bit, 16-bit or 32-bit image");			return;		}		GenericDialog gd = new GenericDialog("Threshold ");		gd.addNumericField("Threshold", 128, 0);		gd.showDialog();		if (gd.wasCanceled())			return;					double t = gd.getNextNumber();		ImageAccess input = new ImageAccess(imp.getProcessor());		ImageAccess output = CodeClass.threshold(input, t);		output.show("T[" + t + "] of " + imp.getTitle());	}	}