import ij.*;import ij.gui.*;import java.awt.*;import ij.*;import ij.process.*;public class Detect_SharpArea {	public Detect_SharpArea() {			ImagePlus imp = WindowManager.getCurrentImage();		if (imp == null) {			IJ.error("No image open.");			return;		}				if (imp.getType() != ImagePlus.GRAY8) {			IJ.error("Only process 8 bits images.");			return;		}				if (imp.getWidth() != imp.getHeight()) {			IJ.error("Only process square images.");			return;		}		GenericDialog gd = new GenericDialog("Detect Sharp Areas");		gd.addNumericField("Scale", 1, 0);		gd.addNumericField("Threshold", 10, 0);		gd.showDialog();		if (gd.wasCanceled())			return;		int scale = (int)gd.getNextNumber();		double threshold = gd.getNextNumber();		ImageAccess image = new ImageAccess(imp.getProcessor());		CodeClass.detectSharpArea(image, scale, threshold);		//TeacherCode.detectSharpArea(image, scale, threshold);					}		static public void showMaskOverlay(ImageAccess input, ImageAccess mask) {			if (input == null) {			IJ.error("The input image is not created.");			return;		}				if (mask == null) {			IJ.error("The mask image is not created.");			return;				}				int nx = input.getWidth();		int ny = input.getHeight();				if (nx != mask.getWidth()) {			IJ.error("The mask image and the input are not the same size.");			return;		}		if (ny != mask.getHeight()) {			IJ.error("The mask image and the input are not the same size.");			return;		}				ColorProcessor cp = new ColorProcessor(nx, ny);		int[] col = new int[3];		java.awt.Color c;		for (int x=0; x<nx; x++)		for (int y=0; y<ny; y++) {			int m = (int)mask.getPixel(x, y);			if (m == 0) {				int g = (int)input.getPixel(x, y);				c = new Color(g, g, g);			}			else {				int g = (int)input.getPixel(x, y);				c = new Color(255, g, g);						}			col[0] = c.getRed();			col[1] = c.getGreen();			col[2] = c.getBlue();			cp.putPixel(x, y, col); 		}		(new ImagePlus("Sharp Area", cp)).show();	}}